pipeline {
    agent any
    tools {
        jdk 'jdk17'
        maven 'maven'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials'
        DOCKER_IMAGE_NAME = 'shivaraja385/webkube' 
    }
    
    stages {
        stage('SCM') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/ShivaHK18/Jenkins-integration-with-kubernetes.git'
            }
        }
        stage('build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('sonar-analysis') {
            steps {
                sh '''mvn sonar:sonar \
                -Dsonar.host.url=http://15.207.106.32:9000/ \
                -Dsonar.login=squ_f406f58da57e059a9a7b232adba9f4d52bdd6730 \
                -Dsonar.projectName=Shivraj \
                -Dsonar.java.binaries=. \
                -Dsonar.projectKey=devopssak '''
            }
        }
        stage('Build Docker Image') {
          steps {
              script {
                  // Build Docker image
                  sh "docker build -t ${DOCKER_IMAGE_NAME}:latest ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                  // Login to DockerHub
                    withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS_ID}", usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                    }
                  // Push Docker image to DockerHub
                    sh "docker push ${DOCKER_IMAGE_NAME}:latest"
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    kubernetesDeploy(configs: "deploymentservice.yml", kubeconfigId: "kubernetes")
                }
            }        	
        }
    }
}
